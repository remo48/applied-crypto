from Crypto.PublicKey import RSA

skey = RSA.construct(
    (
        121357601421667150932154304212177687482839381667074926572049751865655668038945469493815482477748489076860621669304771175269513433850900765921764611957472918628174501914576138508006896498768557239198344323932249949189019922499836713767376825604700217892241543261500532043520345785602687617977267269755597192601,
        65537,
        12845841392328129716163029037600825706848100012534038453363308314143628461238250343930608732907429800077741468538058630056921936354466542004164590087802550145330498103415275002497893248045901618253845975618817447210524153119596831533715995973802045984490099996518497957232422296072384265091174208917395128459,
        10355421931265669384845010865779418004316456423520635645241726170824970970182636518388088438310879854808261316485507154802346045056957537362488473531830059,
        11719232903031936298216915100013175949310964446276597841181839594441737738902431560660594598688933123680899542651064178349818094134865142071737558260081739,
        10165920644231005602201025833858343724064577320324448873013011807801446426587564768693774468829564599266156900987610725216548273551296891679027999730055774,
    )
)

# sign(skey, in_n) = out_n
in_1, out_1 = b'>', b'J\x05k\x8eM\x11\x99%8\xfa\xcd\xd5\xb6Mre\xb2]7\xe0\x08\xf9OBf\x14\xdd\xbb9\xa7\xc6p\xbb]\x93\xb3>C\xd4\xb4\xb4k\xafxX\x99\xb6\x8e\x10)\xda\xf4l\x1b\x922\x84\x9e\x85\x1dg"J\x84%\xedr/\xfd\xccs%\xb9\x15\xcc\xc6\x803mGh\x88m\xfd2\xadl\x0b*\xd1\xa5\x94\xb1\xa2b\xe8\xb9\x9eK\xe8v\xdd4nO|R\xe2\xf6lYLr\x15;\x021\xde\xc9\x87\xf6\xcd\x9c\xba\xd5c\x86^'
in_10, out_10 = b'\x8b%\xe2!8\x9e\xb9\xb3z\xb6', b'5yk\x91`\xc8\x1d\x03>\x0e0\xa0;\x92\x16\xf1g\xde\x10<\xd7\x11\xf0\xa2H\xdf\x1aI\x1d[J\xa6?\xad\xd5\xa7\xaf\x0e\x02\xd6F\x9f\xf2\xc5\xa1\xab=\xf6\xfb\x98\x807\xcb\xe0ch\xa8\x1a\xce9\xfa*r\xa8Bk\rf\x8d\xc6\xe0\x0f\xe7\x12~\x99\x1bz&\xb5\xd5\xf9\xff\xb5\x87f\x8c\xf1\xae\xd6M"?\xed$\xbe\xb3\x83\x98\xe3^ue\xa8iY\xe07/\x07c\xea\x12\xb5\xa8\r\xd3\x8e\x9f?\x88\x81S\x05i\xec\x82\xa6'
in_23, out_23 = b'\xe1\x1d\xb8?0\xeb\x15\xf2\xcc.\xcc!\xfd1\x91b\xfe\xfa\xdeav\t\xcb', b"\x1f\xcf\xcb\xbd\x11\x9eJ\xa9Re\x94\xd5>\xbdK\xad\xea\xeb\xf8'\x0f'\xe4n;u\xf2K3\xf7\x1c\xae\x12\xc9\x98\xad,\xf0\x06\x15s\xc8v\xf9U\x9c>D-x\x08\xee\xbd\xf3\xb1\x80s[\x90\x052\xae\xfc\xdd\xb9\x02c\xde;\x9f\x98?j\x81\xb7$zB\xab\x04\x0e\n\x8b<\xe6\x85\n\x8f\xc8A\r\xb5\x1b1\xaf\x0c\xcc\x0ft\xc2\x0e\x9e\x16\xd0\x8f\x8eP\x98J\x0c(&W\r%\xc3\x8d\xc1\x92\x9f\x9b\xd6\x04\xf1.\xed\x1df"
in_32, out_32 = b'`\xd22\x9e\x0bE$yN\xb9\x03\x15\xe4IG\xbc\x10\x90\x06\xdee\xee\x8a\xe7\xfe4\x944\xd8\x8f\xee\xb9', b'\'\xc7t\xf7\x07\xa6\xa0\x8cv\xa2!\x1c\xff7\x95C\x9a(,\x9f\x1b\xbc\xc4%\xb4\x1f\xa4\xf4\xdcZ\xe8bHSh\xf6T\xbf\xc0\x06\xbf0p8\x90\x19k\xad\xb0\xab%\xc1\xd7[\x89\xb1\x8d\xcbz\x9c\xef\x92R[\xf8\x8b,j0sx\xfd.\x8c\xc3\x06Ws^\x81hg\xd9\xe3\x82\x8d\xf7\x1a\x9e\x00\xa6\x00\xd2\x02\xc3\xdb\xf5=\x1f\x97\xbe\x03\x1e]\x0ew"\x1d\x80hW\xbb\x86\xdc\xc8\x9ai,\xdbj\xa8\x81\xc2\xacr\r\x89\x0c'
in_33, out_33 = b"\xbb\r\x87\xc7/\xc7`\xd2\xd7\nQ\xb75|\x83$\xecR\x8d08\xc3y\xeb\x9f\t':0\xa9\xca\xbb\x81", b'\x12\xf1\xaa\xb4O?\xe86\xe9\x1a\x18Aa\xd0\xd3\x86\x08\xdfd\xd3\xdce\xc7\xe4\x81i.\x83v,\xf7\xf2\x90\xce\xde\xfei7l\x11\xcaNh\x1a\xc4\x1c\x00\xe4$h\xae\xbc\x9f\xc5\x8b+\x9f\xa1\xf0\x97d\xd6LC/9\xa7\xd5\x94\xd5\xd0\x95\x1a\xc5\x12\xce\xfe\x01\x92\xf0\x97\x0cA\x86\xc3\xc2\x148&\xf94\x89\\\x0b\xcc{T\xc0z\x8f\xe5\x91A\x97]\xff\xfd\xdb\xb7\xe8\xfc {\xff\xbb\x88\x8d\xe3\xd7Pj\xef\xe3ZEXOu'
